Linux_build.txt
Software requirements and instructions to compile UDM source files on
Linux

Requirements:
-------------
- GCC 3.x (or later)
- Xerces-C++ 2.5.0 (or later)
- Xalan-C++ 1.8.0 (or later)
- SWIG 1.3.23 (or later)
- minizip
- cppunit
- pccts
- gcc-java 4.x (or later) or Java SDK 1.4.2 (or later)
- ant
- junit
- Boost

Build-environment preparation (Fedora 11, 12):
----------------------------------------------
- install development tools and libraries
  yum groupinstall 'Development Libraries' 'Development Tools' 'Java Development'
  yum install ccache cppunit-devel swig xalan-c-devel xerces-c-devel
  yum install ant ant-junit ant-trax junit xerces-j2 xalan-j2 xml-commons-apis
- install the following rpms from our repository:
  minizip, minizip-devel, minizip-libs, pccts

Build-environment preparation (RHEL 5):
----------------------------------------------
- enable EPEL repository: http://fedoraproject.org/wiki/EPEL
- install development tools and libraries
  yum groupinstall 'Development Libraries' 'Development Tools' 'Java Development'
  yum install ccache cppunit-devel swig xalan-c-devel xerces-c-devel
  yum install ant ant-junit ant-trax junit xerces-j2 xalan-j2 xml-commons-apis
  yum install java-1.6.0-openjdk java-1.6.0-openjdk-devel
- install the following rpms from our repository:
  minizip, minizip-devel, minizip-libs, pccts

Building:
---------------------
- build udm, judm and the tests on Windows;
- on Windows run %UDM_PATH%\scripts\archive-model-files.bat, it will
  create %UDM_PATH%\model-files-*.zip, an archive with the model data
  files generated on Windows
- on Linux export or checkout the Udm sources from subversion repository
- in the top directory run
  autoreconf -i
- from Windows copy the archive model-files-*.zip and rename it to
  model-files.zip; save the archive in the top directory of your build
  directory
- configure and build Udm with the usual sequence of steps for GNU autotools:
  ./configure  (for RHEL and Fedora: ./configure --with-antlr=antlr1)
  make
- to run the tests launch the following command in the top build directory:
  make check
- to build the binary and source rpms launch the following command in
  the top build directory:
  make rpms

Building (Ubuntu):
----------------------------------------------
# Install Build-Deps:
sudo apt-get install ccache libcppunit-dev libxalan110-dev ant junit libxerces-c2-dev sun-java6-jdk ant-optional pccts libboost1.40-dev zlib1g-dev swig
# Configure alternatives to use java-6-sun
sudo update-alternatives --set java /usr/lib/jvm/java-6-sun/jre/bin/java
sudo update-java-alternatives -s java-6-sun
# Copy model-files.zip as above or:
wget 'http://build.isis.vanderbilt.edu/job/UDM/label=build-slave3/lastSuccessfulBuild/artifact/trunk/model-files-VC9-Release.zip' -O model-files.zip
# Build binary debs
fakeroot debian/rules binary

Building (CentOS)
----------------------------------------------
- CentOS <6: enable RPMForge repository: http://wiki.centos.org/AdditionalResources/Repositories/RPMForge
  yum -y groupinstall 'Development Libraries' 'Development Tools' 'Java Development'
  yum -y install ccache cppunit-devel xerces-c-devel swig ant-junit boost-devel antlr
  setenforce permissive
  cd rpmbuild_CentOS && bash make.sh
